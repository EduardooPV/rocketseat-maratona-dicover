<svg fill="none" width="650" height="500" xmlns="http://www.w3.org/2000/svg">
<foreignObject width="100%" height="100%">
<div xmlns="http://www.w3.org/1999/xhtml">
  <style>
    :root {
      --font-color-base: #363F5F;
      --green: #49AA26;
      --light-green: #3DD705;
      --expense-color: #E92929;
      --light-color-base: #FFF;
      --table-color-base: #FFF;
      --background-color-header: #2D4A22;
      --background-color: #F0F2F5;
      --background-color-input:#FFF;
      --calendar-picker-mode: 0;
    }
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      border-radius:0.1px;
    }
    html {
      font-size: 93.75%;
      width: 800px;
      height: 800px;
    }
    body {
      background: var(--background-color);
      font-family: sans-serif;
      transition: 0.3s;
    }
    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      border-width: 0;
    }
    .container {
      width: min( 90vw, 800px );
      margin: auto;
    }
    input {
      background-color: var(--background-color-input);
      color: var(--font-color-base);
    }
    input::placeholder {
      color: var(--font-color-base);
      opacity: .6;
    }
    input::-webkit-calendar-picker-indicator {
      filter: invert(var(--calendar-picker-mode));
    }
    h2 {
      margin-top: 3.2rem;
      margin-bottom: 0.8rem;
      color:var( --font-color-base );
      font-weight: normal;
    }
    a {
      color: var(--green);
      text-decoration: none;
      cursor: pointer;
    }
    a:hover{
      color: var(--light-green);
    }
    .button.new {
      display: inline-block;
      margin-bottom: 0.8rem;
    }
    button {
      width: 100%;
      height: 50px;
      border: none;
      color: var(--light-color-base);
      background: var(--green);
      padding: 0;
      border-radius: 0.25rem;
      cursor: pointer;
    }
    .button {
      cursor: pointer;
    }
    button:hover {
      background: var(--light-green);
    }
    .button.new {
      display: inline-block;
      margin-bottom: 0.8rem;
    }
    .button.cancel {
      color: var(--expense-color);
      border: 2px var(--expense-color) solid;
      border-radius: 0.25rem;
      height: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0.6;
    }
    .button.cancel:hover {
      opacity: 1;
    }
    .color-mode.button {
      position: absolute;
      right: 0px;
      top: 10px;
      color: var(--green);
      padding: 2px 6px;
      border: 1px solid var(--green);
      border-radius: 0.25rem;
    }
    .color-mode.button:hover {
      color: var(--light-green);
      border: 1px solid var(--light-green);
    }
    #transaction {
      display: block;
      width: 100%;
      overflow-X: auto;
    }
    #data-table {
      width: 100%;
      border-spacing: 0 0.5rem;
      color: #969CB3;  
      white-space: nowrap;
    }
    table thead tr th:first-child, 
    table thead tr td:first-child {
      border-radius: 0.25rem 0 0 0.25rem;
    }
    table thead tr th:last-child, 
    table thead tr td:last-child {
      border-radius: 0 0.25rem 0.25rem 0;
    }
    table thead th {
      background: var(--table-color-base);
      font-weight: normal;
      padding: 1rem 2rem;
      text-align: left;
    }
    table tbody td {
      background: var(--table-color-base);
      padding: 1rem 2rem;
    }
    table tbody tr {
      opacity: .7;
    }
    table tbody tr:hover {
      opacity: 1;
    }
    td.description {
      color: var(--font-color-base);
    }
    td.income {
      color: #12A454;
    }
    td.expense {
      color: var(--expense-color);
    }
    .modal-overlay {
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.7);
      position: fixed;
      top: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 999;
    }
    .modal-overlay.active {
      opacity: 1;
      visibility: visible;
    }
    .modal {
      background: var(--background-color);
      padding: 2.4rem;
      margin: 1.4rem;
      border-radius: 10px;
      width: 80%;
      height: 80%;
    }
    #form {
      max-width: 500px;
    }
    #form h2 {
      margin-top: 0;
    }
    input {
      border: none;
      border-radius: 0.2rem;
      padding: 0.8rem;
      width: 100%;
    }
    .input-group {
      margin-top: 0.8rem;
    }
    .input-group .help {
      opacity: 0.4;
      color: var(--font-color-base);
    }
    .input-group.actions {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .input-group.actions .button,
    .input-group.actions button {
      width: 48%;
    }
    .input-group.plots #checkbox-plots {
      height: 2.2rem;
      width: 3rem;
      margin-right: 0.6rem;
      background: #252327;
    }

    .input-group.plots {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
  </style>
  <html>
    <body>
      <div class="modal-overlay transaction">
      <div class="modal">
        <div id="form">
          <h2>Nova Transação</h2>
          <form action="" onsubmit="Form.submit(event)">
            <div class="input-group">
              <label class="sr-only" for="description">Descrição</label>
              <input autocomplete="off" type="text" id="description" name="description" placeholder="Descrição"/>
            </div>
            <div class="input-group plots">
              <label class="sr-only" for="description">Parcelas</label>
              <input onclick="Form.plotsInputState()" type="checkbox" id="checkbox-plots" name="checkbox-plots"
                value="active-plots"/>
              <input autocomplete="off" type="number" id="plots" name="plots" placeholder="Ativar Parcelas"/>
            </div>
            <div class="input-group">
              <label class="sr-only" for="amount">Valor</label>
              <input autocomplete="off" type="number" step="0.01" id="amount" name="amount" placeholder="0,00"/>
              <small class="help"> Use o sinal - (negativo) para despesas e , (vírgula) para casas decimais.</small>
            </div>
            <div class="input-group">
              <label class="sr-only" for="date">Data</label>
              <input autocomplete="off" type="date" id="date" name="date"/>
            </div>

            <div class="input-group actions">
              <a href="#" class="button cancel" onclick="Modal.toggle('transaction')">Cancelar</a>
              <button>Salvar</button>
            </div>
          </form>
        </div>
      </div>
    </div>
    </body>
  </html>
</div>
</foreignObject>
</svg>